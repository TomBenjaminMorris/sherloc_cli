#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'sherloc'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/sherloc` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/sherloc now"
  exit 64
end

class App
  extend GLI::App

  program_desc 'Describe your application here'

  version Sherloc::VERSION  

  subcommand_option_handling :normal
  arguments :strict

  desc 'Describe some switch here'
  switch [:s,:switch]

  desc 'Describe some flag here'
  default_value 'the default'
  arg_name 'The name of the argument'
  flag [:f,:flagname]

  desc 'Perform a scan of a container image or a code file'
  arg_name 'Describe arguments to list here'
  command :scan do |c|
    # c.desc 'Describe a switch to list'
    # c.switch :s

    c.desc 'Perform a scan on multiple files'
    c.switch %i[m multi-scan]

    c.desc 'Scan a container image'
    c.switch %i[i image]

    c.desc 'Scan a code file'
    c.switch %i[c code]

    c.desc 'Specified file'
    c.flag %i[f file]

    # c.desc 'Describe a flag to list'
    # c.default_value 'default'
    # c.flag :f

    c.action do |global_options,options,args|

      # Your command logic here
      if options[:m]
        case true
        when options[:i]
          puts "image scan multi: %{file}" %options
          # system("cat " + options[:f]);
          f = File.open(options[:f])
          f_lines = f.read.split("\n")
          f_lines.each_with_index do |line, index|
            puts "Scanning: " + line + "..."
            system("trivy --skip-update -f json -o ./json_files/results" + (index+1).to_s + ".json -q " + line);
            puts "Completed scan of " + line
          end
        when options[:c]
          puts "code scan multi: %{file}" %options
        else
          "."
        end
      else
        case true
        when options[:i]
          puts "image scan single: %{file}" %options
          puts 'Attempting scan on image: %{file}...' % options
          system("trivy --skip-update -f json -o ./json_files/results.json -q " + options[:f]);
        when options[:c]
          puts "code scan single: %{file}" %options
        else
          "."
        end
      end

      # If you have any errors, just raise them
      # raise "that command made no sense"
    end
  end

  # desc 'Describe add here'
  # arg_name 'Describe arguments to add here'
  # command :add do |c|
  #   c.action do |global_options,options,args|
  #     puts "add command ran"
  #   end
  # end

  # desc 'Describe complete here'
  # arg_name 'Describe arguments to complete here'
  # command :complete do |c|
  #   c.action do |global_options,options,args|
  #     puts "complete command ran"
  #   end
  # end

  pre do |global,command,options,args|
    # puts "this runs first"
    # Pre logic here
    # Return true to proceed; false to abort and not call the
    # chosen command
    # Use skips_pre before a command to skip this block
    # on that command only
    true
  end

  post do |global,command,options,args|
    # puts "this runs last"
    # Post logic here
    # Use skips_post before a command to skip this
    # block on that command only
  end

  on_error do |exception|
    # Error logic here
    # return false to skip default error handling
    true
  end
end

exit App.run(ARGV)
